%!PS-Adobe-2.0
%%Title: images/graphes-freemem-mean.ps
%%Creator: gnuplot 4.2 patchlevel 2 
%%CreationDate: Sun Sep 28 15:32:32 2008
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 554 770
%%Orientation: Landscape
%%Pages: (atend)
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape true def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -46 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (images/graphes-freemem-mean.ps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 2 )
  /Author (Hatem Nassrat,,,)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Sun Sep 28 15:32:32 2008)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (August 2006)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
50 50 translate
0.100 0.100 scale
90 rotate
0 -5040 translate
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
1.000 UL
LTb
1.000 UL
LTa
714 420 M
6248 0 V
stroke
LTb
714 420 M
63 0 V
6185 0 R
-63 0 V
630 420 M
( 654) Rshow
1.000 UL
LTb
1.000 UL
LTa
714 945 M
6248 0 V
stroke
LTb
714 945 M
63 0 V
6185 0 R
-63 0 V
630 945 M
( 656) Rshow
1.000 UL
LTb
1.000 UL
LTa
714 1470 M
6248 0 V
stroke
LTb
714 1470 M
63 0 V
6185 0 R
-63 0 V
-6269 0 R
( 658) Rshow
1.000 UL
LTb
1.000 UL
LTa
714 1995 M
6248 0 V
stroke
LTb
714 1995 M
63 0 V
6185 0 R
-63 0 V
-6269 0 R
( 660) Rshow
1.000 UL
LTb
1.000 UL
LTa
714 2520 M
6248 0 V
stroke
LTb
714 2520 M
63 0 V
6185 0 R
-63 0 V
-6269 0 R
( 662) Rshow
1.000 UL
LTb
1.000 UL
LTa
714 3045 M
6248 0 V
stroke
LTb
714 3045 M
63 0 V
6185 0 R
-63 0 V
-6269 0 R
( 664) Rshow
1.000 UL
LTb
1.000 UL
LTa
714 3570 M
6248 0 V
stroke
LTb
714 3570 M
63 0 V
6185 0 R
-63 0 V
-6269 0 R
( 666) Rshow
1.000 UL
LTb
1.000 UL
LTa
714 4095 M
6248 0 V
stroke
LTb
714 4095 M
63 0 V
6185 0 R
-63 0 V
-6269 0 R
( 668) Rshow
1.000 UL
LTb
1.000 UL
LTa
714 4620 M
6248 0 V
stroke
LTb
714 4620 M
63 0 V
6185 0 R
-63 0 V
-6269 0 R
( 670) Rshow
1.000 UL
LTb
1.000 UL
LTa
714 420 M
0 4200 V
stroke
LTb
714 420 M
0 63 V
0 4137 R
0 -63 V
714 280 M
( 0) Cshow
1.000 UL
LTb
1.000 UL
LTa
1495 420 M
0 3997 V
0 140 R
0 63 V
stroke
LTb
1495 420 M
0 63 V
0 4137 R
0 -63 V
0 -4277 R
( 500) Cshow
1.000 UL
LTb
1.000 UL
LTa
2276 420 M
0 3997 V
0 140 R
0 63 V
stroke
LTb
2276 420 M
0 63 V
0 4137 R
0 -63 V
0 -4277 R
( 1000) Cshow
1.000 UL
LTb
1.000 UL
LTa
3057 420 M
0 4200 V
stroke
LTb
3057 420 M
0 63 V
0 4137 R
0 -63 V
0 -4277 R
( 1500) Cshow
1.000 UL
LTb
1.000 UL
LTa
3838 420 M
0 4200 V
stroke
LTb
3838 420 M
0 63 V
0 4137 R
0 -63 V
0 -4277 R
( 2000) Cshow
1.000 UL
LTb
1.000 UL
LTa
4619 420 M
0 4200 V
stroke
LTb
4619 420 M
0 63 V
0 4137 R
0 -63 V
0 -4277 R
( 2500) Cshow
1.000 UL
LTb
1.000 UL
LTa
5400 420 M
0 4200 V
stroke
LTb
5400 420 M
0 63 V
0 4137 R
0 -63 V
0 -4277 R
( 3000) Cshow
1.000 UL
LTb
1.000 UL
LTa
6181 420 M
0 4200 V
stroke
LTb
6181 420 M
0 63 V
0 4137 R
0 -63 V
0 -4277 R
( 3500) Cshow
1.000 UL
LTb
1.000 UL
LTa
6962 420 M
0 4200 V
stroke
LTb
6962 420 M
0 63 V
0 4137 R
0 -63 V
0 -4277 R
( 4000) Cshow
1.000 UL
LTb
1.000 UL
LTb
714 4620 N
714 420 L
6248 0 V
0 4200 V
-6248 0 V
Z stroke
LCb setrgbcolor
140 2520 M
currentpoint gsave translate 90 rotate 0 0 M
(freemem) Cshow
grestore
LTb
LCb setrgbcolor
3838 70 M
(unit = sec ) Cshow
LTb
3838 4830 M
( mean) Cshow
1.000 UP
1.000 UL
LTb
1.000 UP
1.000 UL
LT0
LTb
2226 4487 M
(freemem) Rshow
LT0
2310 4487 M
399 0 V
714 4118 M
16 -122 V
15 -71 V
16 -126 V
15 -27 V
16 -12 V
16 14 V
15 -27 V
16 -16 V
16 -37 V
15 44 V
16 -127 V
15 -101 V
16 119 V
16 20 V
15 -22 V
16 -45 V
16 -102 V
15 -4 V
16 138 V
15 2 V
16 -74 V
16 46 V
15 -41 V
16 -41 V
16 -57 V
15 17 V
16 -52 V
15 10 V
16 60 V
16 -5 V
15 -130 V
16 -8 V
15 25 V
16 -40 V
16 -45 V
15 49 V
16 -54 V
16 6 V
15 -6 V
16 -49 V
15 -49 V
16 195 V
16 -56 V
15 -5 V
16 -146 V
1433 464 L
15 2573 V
16 28 V
15 -81 V
16 22 V
16 -3 V
15 9 V
16 -3 V
15 144 V
16 -121 V
16 -32 V
15 168 V
16 -8 V
16 -20 V
15 -3 V
16 -20 V
15 -123 V
16 90 V
16 4 V
15 -94 V
16 3 V
16 -109 V
15 238 V
16 -21 V
15 1 V
16 1 V
16 -50 V
15 -46 V
16 10 V
16 -33 V
15 55 V
16 -20 V
15 -20 V
16 -35 V
16 24 V
15 -11 V
16 128 V
15 -7 V
16 -14 V
16 -33 V
15 50 V
16 -37 V
16 4 V
15 -77 V
16 -15 V
15 -70 V
16 -45 V
16 -8 V
15 -49 V
16 84 V
16 -114 V
15 -3 V
16 67 V
15 -108 V
16 -65 V
16 140 V
15 -7 V
16 -99 V
15 -17 V
16 128 V
16 -87 V
15 43 V
16 33 V
16 -19 V
15 115 V
16 -150 V
15 -29 V
16 9 V
16 -111 V
15 106 V
16 -27 V
16 -128 V
15 39 V
16 48 V
15 -222 V
16 104 V
16 50 V
15 -34 V
16 -3 V
16 -32 V
15 -65 V
16 311 V
15 -63 V
16 -44 V
16 -3 V
15 -100 V
16 41 V
15 -2 V
16 -12 V
16 -239 V
15 100 V
16 95 V
16 50 V
15 -34 V
16 -37 V
15 -227 V
16 190 V
16 -10 V
15 -67 V
16 -12 V
16 -64 V
15 152 V
16 -41 V
15 -33 V
16 -131 V
3073 2264 L
15 43 V
16 -88 V
15 123 V
16 -13 V
16 142 V
15 32 V
16 -82 V
16 -42 V
15 -27 V
16 0 V
15 -71 V
16 173 V
16 12 V
15 -837 V
16 627 V
16 -47 V
15 29 V
16 109 V
15 -7 V
16 -35 V
16 -2 V
15 -13 V
16 1 V
16 -28 V
15 19 V
16 -6 V
15 -11 V
16 -72 V
16 -69 V
15 39 V
16 -39 V
15 -81 V
16 74 V
16 -136 V
15 65 V
16 -44 V
16 -4 V
15 1 V
16 -59 V
15 96 V
16 -24 V
16 16 V
15 133 V
16 31 V
16 -72 V
15 41 V
16 -42 V
15 23 V
16 10 V
16 -51 V
15 -40 V
16 -112 V
15 135 V
16 14 V
16 10 V
15 11 V
16 -18 V
16 7 V
15 -74 V
16 14 V
31 36 V
16 -20 V
15 -15 V
16 -57 V
16 13 V
15 -42 V
16 -171 V
15 142 V
16 -20 V
16 -60 V
15 -66 V
16 170 V
16 13 V
15 -80 V
16 -15 V
15 -16 V
16 -6 V
16 -16 V
15 -25 V
16 -18 V
15 -30 V
16 -15 V
16 6 V
15 7 V
16 -4 V
16 -20 V
15 184 V
16 2 V
15 -16 V
16 -39 V
16 -32 V
15 -6 V
16 -29 V
16 2 V
15 -42 V
16 18 V
15 -1 V
16 -70 V
16 1 V
15 148 V
16 35 V
15 -55 V
16 -42 V
16 -6 V
4728 1737 L
16 -10 V
16 -40 V
15 -32 V
16 -30 V
15 -4 V
16 8 V
16 -24 V
15 -8 V
16 147 V
16 19 V
15 17 V
16 -35 V
15 43 V
16 -59 V
16 -21 V
15 27 V
16 -134 V
16 17 V
15 5 V
16 -3 V
15 10 V
16 -38 V
16 -42 V
15 4 V
16 -31 V
15 113 V
16 -16 V
16 -55 V
15 -51 V
16 -3 V
16 -53 V
15 -49 V
16 126 V
15 -30 V
16 14 V
16 -37 V
15 -42 V
16 -21 V
16 -31 V
15 -48 V
16 16 V
15 -23 V
16 19 V
16 4 V
15 -11 V
16 -16 V
15 -12 V
16 -35 V
16 180 V
15 2 V
16 7 V
16 -28 V
15 17 V
16 -56 V
15 -15 V
16 -126 V
16 -8 V
15 -10 V
16 11 V
16 8 V
15 6 V
16 111 V
15 51 V
16 -54 V
16 9 V
15 -103 V
16 -16 V
16 61 V
15 -40 V
16 13 V
15 -14 V
16 -31 V
16 -37 V
15 -54 V
16 23 V
15 -56 V
16 -3 V
16 -67 V
15 36 V
16 -75 V
16 17 V
15 59 V
16 72 V
15 -118 V
16 41 V
16 -77 V
15 31 V
16 93 V
16 -60 V
15 7 V
16 17 V
15 -52 V
16 -92 V
16 -24 V
15 146 V
16 -22 V
15 24 V
16 -32 V
16 -48 V
15 -67 V
16 11 V
16 4 V
15 -25 V
16 -69 V
6368 876 L
16 7 V
16 2 V
15 3 V
16 2 V
714 4118 Pls
730 3996 Pls
745 3925 Pls
761 3799 Pls
776 3772 Pls
792 3760 Pls
808 3774 Pls
823 3747 Pls
839 3731 Pls
855 3694 Pls
870 3738 Pls
886 3611 Pls
901 3510 Pls
917 3629 Pls
933 3649 Pls
948 3627 Pls
964 3582 Pls
980 3480 Pls
995 3476 Pls
1011 3614 Pls
1026 3616 Pls
1042 3542 Pls
1058 3588 Pls
1073 3547 Pls
1089 3506 Pls
1105 3449 Pls
1120 3466 Pls
1136 3414 Pls
1151 3424 Pls
1167 3484 Pls
1183 3479 Pls
1198 3349 Pls
1214 3341 Pls
1229 3366 Pls
1245 3326 Pls
1261 3281 Pls
1276 3330 Pls
1292 3276 Pls
1308 3282 Pls
1323 3276 Pls
1339 3227 Pls
1354 3178 Pls
1370 3373 Pls
1386 3317 Pls
1401 3312 Pls
1417 3166 Pls
1433 464 Pls
1448 3037 Pls
1464 3065 Pls
1479 2984 Pls
1495 3006 Pls
1511 3003 Pls
1526 3012 Pls
1542 3009 Pls
1557 3153 Pls
1573 3032 Pls
1589 3000 Pls
1604 3168 Pls
1620 3160 Pls
1636 3140 Pls
1651 3137 Pls
1667 3117 Pls
1682 2994 Pls
1698 3084 Pls
1714 3088 Pls
1729 2994 Pls
1745 2997 Pls
1761 2888 Pls
1776 3126 Pls
1792 3105 Pls
1807 3106 Pls
1823 3107 Pls
1839 3057 Pls
1854 3011 Pls
1870 3021 Pls
1886 2988 Pls
1901 3043 Pls
1917 3023 Pls
1932 3003 Pls
1948 2968 Pls
1964 2992 Pls
1979 2981 Pls
1995 3109 Pls
2010 3102 Pls
2026 3088 Pls
2042 3055 Pls
2057 3105 Pls
2073 3068 Pls
2089 3072 Pls
2104 2995 Pls
2120 2980 Pls
2135 2910 Pls
2151 2865 Pls
2167 2857 Pls
2182 2808 Pls
2198 2892 Pls
2214 2778 Pls
2229 2775 Pls
2245 2842 Pls
2260 2734 Pls
2276 2669 Pls
2292 2809 Pls
2307 2802 Pls
2323 2703 Pls
2338 2686 Pls
2354 2814 Pls
2370 2727 Pls
2385 2770 Pls
2401 2803 Pls
2417 2784 Pls
2432 2899 Pls
2448 2749 Pls
2463 2720 Pls
2479 2729 Pls
2495 2618 Pls
2510 2724 Pls
2526 2697 Pls
2542 2569 Pls
2557 2608 Pls
2573 2656 Pls
2588 2434 Pls
2604 2538 Pls
2620 2588 Pls
2635 2554 Pls
2651 2551 Pls
2667 2519 Pls
2682 2454 Pls
2698 2765 Pls
2713 2702 Pls
2729 2658 Pls
2745 2655 Pls
2760 2555 Pls
2776 2596 Pls
2791 2594 Pls
2807 2582 Pls
2823 2343 Pls
2838 2443 Pls
2854 2538 Pls
2870 2588 Pls
2885 2554 Pls
2901 2517 Pls
2916 2290 Pls
2932 2480 Pls
2948 2470 Pls
2963 2403 Pls
2979 2391 Pls
2995 2327 Pls
3010 2479 Pls
3026 2438 Pls
3041 2405 Pls
3057 2274 Pls
3073 2264 Pls
3088 2307 Pls
3104 2219 Pls
3119 2342 Pls
3135 2329 Pls
3151 2471 Pls
3166 2503 Pls
3182 2421 Pls
3198 2379 Pls
3213 2352 Pls
3229 2352 Pls
3244 2281 Pls
3260 2454 Pls
3276 2466 Pls
3291 1629 Pls
3307 2256 Pls
3323 2209 Pls
3338 2238 Pls
3354 2347 Pls
3369 2340 Pls
3385 2305 Pls
3401 2303 Pls
3416 2290 Pls
3432 2291 Pls
3448 2263 Pls
3463 2282 Pls
3479 2276 Pls
3494 2265 Pls
3510 2193 Pls
3526 2124 Pls
3541 2163 Pls
3557 2124 Pls
3572 2043 Pls
3588 2117 Pls
3604 1981 Pls
3619 2046 Pls
3635 2002 Pls
3651 1998 Pls
3666 1999 Pls
3682 1940 Pls
3697 2036 Pls
3713 2012 Pls
3729 2028 Pls
3744 2161 Pls
3760 2192 Pls
3776 2120 Pls
3791 2161 Pls
3807 2119 Pls
3822 2142 Pls
3838 2152 Pls
3854 2101 Pls
3869 2061 Pls
3885 1949 Pls
3900 2084 Pls
3916 2098 Pls
3932 2108 Pls
3947 2119 Pls
3963 2101 Pls
3979 2108 Pls
3994 2034 Pls
4010 2048 Pls
4041 2084 Pls
4057 2064 Pls
4072 2049 Pls
4088 1992 Pls
4104 2005 Pls
4119 1963 Pls
4135 1792 Pls
4150 1934 Pls
4166 1914 Pls
4182 1854 Pls
4197 1788 Pls
4213 1958 Pls
4229 1971 Pls
4244 1891 Pls
4260 1876 Pls
4275 1860 Pls
4291 1854 Pls
4307 1838 Pls
4322 1813 Pls
4338 1795 Pls
4353 1765 Pls
4369 1750 Pls
4385 1756 Pls
4400 1763 Pls
4416 1759 Pls
4432 1739 Pls
4447 1923 Pls
4463 1925 Pls
4478 1909 Pls
4494 1870 Pls
4510 1838 Pls
4525 1832 Pls
4541 1803 Pls
4557 1805 Pls
4572 1763 Pls
4588 1781 Pls
4603 1780 Pls
4619 1710 Pls
4635 1711 Pls
4650 1859 Pls
4666 1894 Pls
4681 1839 Pls
4697 1797 Pls
4713 1791 Pls
4728 1737 Pls
4744 1727 Pls
4760 1687 Pls
4775 1655 Pls
4791 1625 Pls
4806 1621 Pls
4822 1629 Pls
4838 1605 Pls
4853 1597 Pls
4869 1744 Pls
4885 1763 Pls
4900 1780 Pls
4916 1745 Pls
4931 1788 Pls
4947 1729 Pls
4963 1708 Pls
4978 1735 Pls
4994 1601 Pls
5010 1618 Pls
5025 1623 Pls
5041 1620 Pls
5056 1630 Pls
5072 1592 Pls
5088 1550 Pls
5103 1554 Pls
5119 1523 Pls
5134 1636 Pls
5150 1620 Pls
5166 1565 Pls
5181 1514 Pls
5197 1511 Pls
5213 1458 Pls
5228 1409 Pls
5244 1535 Pls
5259 1505 Pls
5275 1519 Pls
5291 1482 Pls
5306 1440 Pls
5322 1419 Pls
5338 1388 Pls
5353 1340 Pls
5369 1356 Pls
5384 1333 Pls
5400 1352 Pls
5416 1356 Pls
5431 1345 Pls
5447 1329 Pls
5462 1317 Pls
5478 1282 Pls
5494 1462 Pls
5509 1464 Pls
5525 1471 Pls
5541 1443 Pls
5556 1460 Pls
5572 1404 Pls
5587 1389 Pls
5603 1263 Pls
5619 1255 Pls
5634 1245 Pls
5650 1256 Pls
5666 1264 Pls
5681 1270 Pls
5697 1381 Pls
5712 1432 Pls
5728 1378 Pls
5744 1387 Pls
5759 1284 Pls
5775 1268 Pls
5791 1329 Pls
5806 1289 Pls
5822 1302 Pls
5837 1288 Pls
5853 1257 Pls
5869 1220 Pls
5884 1166 Pls
5900 1189 Pls
5915 1133 Pls
5931 1130 Pls
5947 1063 Pls
5962 1099 Pls
5978 1024 Pls
5994 1041 Pls
6009 1100 Pls
6025 1172 Pls
6040 1054 Pls
6056 1095 Pls
6072 1018 Pls
6087 1049 Pls
6103 1142 Pls
6119 1082 Pls
6134 1089 Pls
6150 1106 Pls
6165 1054 Pls
6181 962 Pls
6197 938 Pls
6212 1084 Pls
6228 1062 Pls
6243 1086 Pls
6259 1054 Pls
6275 1006 Pls
6290 939 Pls
6306 950 Pls
6322 954 Pls
6337 929 Pls
6353 860 Pls
6368 876 Pls
6384 883 Pls
6400 885 Pls
6415 888 Pls
6431 890 Pls
2509 4487 Pls
1.000 UL
LTb
714 4620 N
714 420 L
6248 0 V
0 4200 V
-6248 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
%%Pages: 1
