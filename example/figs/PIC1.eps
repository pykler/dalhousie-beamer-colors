%!PS-Adobe-2.0
%%Title: images/graphes-freemem-mean.ps
%%Creator: gnuplot 4.2 patchlevel 2 
%%CreationDate: Sun Sep 28 15:32:34 2008
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 554 770
%%Orientation: Landscape
%%Pages: (atend)
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape true def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -46 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (images/graphes-freemem-mean.ps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 2 )
  /Author (Hatem Nassrat,,,)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Sun Sep 28 15:32:34 2008)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (August 2006)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
50 50 translate
0.100 0.100 scale
90 rotate
0 -5040 translate
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
1.000 UL
LTb
1.000 UL
LTa
714 420 M
6248 0 V
stroke
LTb
714 420 M
63 0 V
6185 0 R
-63 0 V
630 420 M
( 665) Rshow
1.000 UL
LTb
1.000 UL
LTa
714 1120 M
6248 0 V
stroke
LTb
714 1120 M
63 0 V
6185 0 R
-63 0 V
-6269 0 R
( 670) Rshow
1.000 UL
LTb
1.000 UL
LTa
714 1820 M
6248 0 V
stroke
LTb
714 1820 M
63 0 V
6185 0 R
-63 0 V
-6269 0 R
( 675) Rshow
1.000 UL
LTb
1.000 UL
LTa
714 2520 M
6248 0 V
stroke
LTb
714 2520 M
63 0 V
6185 0 R
-63 0 V
-6269 0 R
( 680) Rshow
1.000 UL
LTb
1.000 UL
LTa
714 3220 M
6248 0 V
stroke
LTb
714 3220 M
63 0 V
6185 0 R
-63 0 V
-6269 0 R
( 685) Rshow
1.000 UL
LTb
1.000 UL
LTa
714 3920 M
6248 0 V
stroke
LTb
714 3920 M
63 0 V
6185 0 R
-63 0 V
-6269 0 R
( 690) Rshow
1.000 UL
LTb
1.000 UL
LTa
714 4620 M
6248 0 V
stroke
LTb
714 4620 M
63 0 V
6185 0 R
-63 0 V
-6269 0 R
( 695) Rshow
1.000 UL
LTb
1.000 UL
LTa
714 420 M
0 4200 V
stroke
LTb
714 420 M
0 63 V
0 4137 R
0 -63 V
714 280 M
( 0) Cshow
1.000 UL
LTb
1.000 UL
LTa
1495 420 M
0 3997 V
0 140 R
0 63 V
stroke
LTb
1495 420 M
0 63 V
0 4137 R
0 -63 V
0 -4277 R
( 500) Cshow
1.000 UL
LTb
1.000 UL
LTa
2276 420 M
0 3997 V
0 140 R
0 63 V
stroke
LTb
2276 420 M
0 63 V
0 4137 R
0 -63 V
0 -4277 R
( 1000) Cshow
1.000 UL
LTb
1.000 UL
LTa
3057 420 M
0 4200 V
stroke
LTb
3057 420 M
0 63 V
0 4137 R
0 -63 V
0 -4277 R
( 1500) Cshow
1.000 UL
LTb
1.000 UL
LTa
3838 420 M
0 4200 V
stroke
LTb
3838 420 M
0 63 V
0 4137 R
0 -63 V
0 -4277 R
( 2000) Cshow
1.000 UL
LTb
1.000 UL
LTa
4619 420 M
0 4200 V
stroke
LTb
4619 420 M
0 63 V
0 4137 R
0 -63 V
0 -4277 R
( 2500) Cshow
1.000 UL
LTb
1.000 UL
LTa
5400 420 M
0 4200 V
stroke
LTb
5400 420 M
0 63 V
0 4137 R
0 -63 V
0 -4277 R
( 3000) Cshow
1.000 UL
LTb
1.000 UL
LTa
6181 420 M
0 4200 V
stroke
LTb
6181 420 M
0 63 V
0 4137 R
0 -63 V
0 -4277 R
( 3500) Cshow
1.000 UL
LTb
1.000 UL
LTa
6962 420 M
0 4200 V
stroke
LTb
6962 420 M
0 63 V
0 4137 R
0 -63 V
0 -4277 R
( 4000) Cshow
1.000 UL
LTb
1.000 UL
LTb
714 4620 N
714 420 L
6248 0 V
0 4200 V
-6248 0 V
Z stroke
LCb setrgbcolor
140 2520 M
currentpoint gsave translate 90 rotate 0 0 M
(freemem) Cshow
grestore
LTb
LCb setrgbcolor
3838 70 M
(unit = sec ) Cshow
LTb
3838 4830 M
( mean) Cshow
1.000 UP
1.000 UL
LTb
1.000 UP
1.000 UL
LT0
LTb
2226 4487 M
(freemem) Rshow
LT0
2310 4487 M
399 0 V
714 4500 M
16 -84 V
15 -67 V
16 13 V
15 12 V
16 10 V
16 19 V
15 -63 V
16 14 V
16 -19 V
15 43 V
16 -8 V
15 -19 V
16 -38 V
16 -30 V
15 103 V
16 -230 V
16 115 V
15 -6 V
16 11 V
15 25 V
16 -52 V
16 8 V
15 1 V
16 -14 V
16 39 V
15 -22 V
16 -4 V
15 -7 V
16 -27 V
16 -19 V
15 37 V
16 90 V
15 20 V
16 -21 V
16 1 V
15 -31 V
16 -43 V
16 -19 V
15 -9 V
16 33 V
15 60 V
16 -48 V
16 -50 V
15 28 V
16 -18 V
16 2 V
15 -26 V
16 58 V
15 -7 V
16 -182 V
16 -18 V
15 -97 V
16 -115 V
15 168 V
16 -59 V
16 -7 V
15 -33 V
16 53 V
16 9 V
15 -53 V
16 44 V
15 31 V
16 -25 V
16 -15 V
15 18 V
16 -50 V
16 32 V
15 21 V
16 23 V
15 -6 V
16 -1 V
16 -64 V
15 50 V
16 5 V
16 -29 V
15 -64 V
16 -13 V
15 -48 V
16 43 V
16 85 V
15 -11 V
16 -13 V
15 2 V
16 -69 V
16 37 V
15 15 V
16 -1 V
16 -40 V
15 -14 V
16 2 V
15 67 V
16 -14 V
16 -2 V
15 -39 V
16 40 V
16 -35 V
15 -50 V
16 -141 V
15 150 V
16 -13 V
16 -20 V
15 -32 V
2323 3755 L
15 -18 V
16 -47 V
16 77 V
15 31 V
16 -44 V
16 -122 V
15 115 V
16 -11 V
15 -89 V
16 -8 V
16 1 V
15 34 V
16 -31 V
16 -34 V
15 4 V
16 4 V
15 -35 V
16 35 V
16 -14 V
15 -15 V
16 -58 V
16 88 V
15 -262 V
16 -32 V
15 -63 V
16 -85 V
16 75 V
15 45 V
16 30 V
15 -12 V
16 -44 V
16 26 V
15 -16 V
16 9 V
16 -47 V
15 -2 V
16 -57 V
15 88 V
16 -32 V
16 -27 V
15 -42 V
16 4 V
16 -22 V
15 -3 V
16 -6 V
15 -21 V
16 -16 V
16 88 V
15 -19 V
16 -27 V
15 -46 V
16 -23 V
16 -49 V
15 11 V
16 87 V
16 -28 V
15 28 V
16 0 V
15 -37 V
16 11 V
16 -4 V
15 -23 V
16 -4 V
16 -40 V
15 -58 V
16 22 V
15 -9 V
16 -19 V
16 10 V
15 -5 V
16 -7 V
16 11 V
15 -27 V
16 -20 V
15 95 V
16 -47 V
16 -11 V
15 -112 V
16 69 V
15 -44 V
16 -28 V
16 59 V
15 -52 V
16 13 V
16 4 V
15 -44 V
16 -5 V
15 -15 V
16 -4 V
16 7 V
15 -146 V
16 37 V
16 -189 V
15 70 V
16 132 V
15 -3 V
16 4 V
16 12 V
15 48 V
16 0 V
15 -24 V
16 -9 V
16 -24 V
15 -2 V
3963 2641 L
16 -14 V
15 -11 V
16 -42 V
15 -14 V
16 -12 V
16 -12 V
15 14 V
16 -12 V
16 -14 V
15 10 V
16 -15 V
15 -8 V
16 7 V
16 -23 V
15 12 V
16 -9 V
16 50 V
15 -13 V
16 4 V
15 -2 V
16 14 V
16 -56 V
15 20 V
16 -22 V
15 20 V
16 -68 V
16 -5 V
15 -47 V
16 2 V
16 48 V
15 8 V
16 -25 V
15 10 V
16 -38 V
16 7 V
15 -37 V
16 -11 V
16 -40 V
15 8 V
16 -4 V
15 -3 V
16 -48 V
16 18 V
15 -3 V
16 -7 V
15 -19 V
16 -17 V
16 -29 V
15 10 V
16 65 V
16 26 V
15 -38 V
16 -51 V
15 -27 V
16 -96 V
16 -49 V
15 8 V
16 -26 V
16 2 V
15 -31 V
16 -14 V
15 -30 V
16 107 V
16 0 V
15 3 V
16 -49 V
16 -9 V
15 -5 V
16 -6 V
15 -44 V
16 -5 V
16 -24 V
15 27 V
16 -40 V
15 24 V
16 -9 V
16 9 V
15 -13 V
16 -5 V
16 -60 V
15 123 V
16 -24 V
15 -46 V
16 -35 V
16 8 V
31 -37 V
16 -4 V
15 -102 V
16 15 V
15 -6 V
16 59 V
16 -8 V
15 15 V
16 -37 V
15 10 V
16 2 V
16 -36 V
15 -61 V
16 55 V
16 -23 V
15 -18 V
16 -23 V
15 -11 V
16 -23 V
5619 1620 L
15 -58 V
16 106 V
16 10 V
15 -23 V
16 -24 V
15 -13 V
16 -10 V
16 5 V
15 -22 V
16 -327 V
16 -61 V
15 -202 V
16 -107 V
15 40 V
16 -148 V
16 -67 V
15 79 V
16 19 V
15 2 V
16 -4 V
16 -9 V
15 -23 V
16 -15 V
16 42 V
15 2 V
16 -19 V
15 -26 V
16 -16 V
16 -6 V
15 -69 V
16 4 V
16 -8 V
15 -22 V
16 48 V
15 2 V
16 22 V
16 -23 V
15 -11 V
16 45 V
15 -41 V
16 -29 V
16 -24 V
15 9 V
16 5 V
16 -24 V
15 65 V
16 4 V
15 2 V
16 -19 V
16 6 V
714 4500 Pls
730 4416 Pls
745 4349 Pls
761 4362 Pls
776 4374 Pls
792 4384 Pls
808 4403 Pls
823 4340 Pls
839 4354 Pls
855 4335 Pls
870 4378 Pls
886 4370 Pls
901 4351 Pls
917 4313 Pls
933 4283 Pls
948 4386 Pls
964 4156 Pls
980 4271 Pls
995 4265 Pls
1011 4276 Pls
1026 4301 Pls
1042 4249 Pls
1058 4257 Pls
1073 4258 Pls
1089 4244 Pls
1105 4283 Pls
1120 4261 Pls
1136 4257 Pls
1151 4250 Pls
1167 4223 Pls
1183 4204 Pls
1198 4241 Pls
1214 4331 Pls
1229 4351 Pls
1245 4330 Pls
1261 4331 Pls
1276 4300 Pls
1292 4257 Pls
1308 4238 Pls
1323 4229 Pls
1339 4262 Pls
1354 4322 Pls
1370 4274 Pls
1386 4224 Pls
1401 4252 Pls
1417 4234 Pls
1433 4236 Pls
1448 4210 Pls
1464 4268 Pls
1479 4261 Pls
1495 4079 Pls
1511 4061 Pls
1526 3964 Pls
1542 3849 Pls
1557 4017 Pls
1573 3958 Pls
1589 3951 Pls
1604 3918 Pls
1620 3971 Pls
1636 3980 Pls
1651 3927 Pls
1667 3971 Pls
1682 4002 Pls
1698 3977 Pls
1714 3962 Pls
1729 3980 Pls
1745 3930 Pls
1761 3962 Pls
1776 3983 Pls
1792 4006 Pls
1807 4000 Pls
1823 3999 Pls
1839 3935 Pls
1854 3985 Pls
1870 3990 Pls
1886 3961 Pls
1901 3897 Pls
1917 3884 Pls
1932 3836 Pls
1948 3879 Pls
1964 3964 Pls
1979 3953 Pls
1995 3940 Pls
2010 3942 Pls
2026 3873 Pls
2042 3910 Pls
2057 3925 Pls
2073 3924 Pls
2089 3884 Pls
2104 3870 Pls
2120 3872 Pls
2135 3939 Pls
2151 3925 Pls
2167 3923 Pls
2182 3884 Pls
2198 3924 Pls
2214 3889 Pls
2229 3839 Pls
2245 3698 Pls
2260 3848 Pls
2276 3835 Pls
2292 3815 Pls
2307 3783 Pls
2323 3755 Pls
2338 3737 Pls
2354 3690 Pls
2370 3767 Pls
2385 3798 Pls
2401 3754 Pls
2417 3632 Pls
2432 3747 Pls
2448 3736 Pls
2463 3647 Pls
2479 3639 Pls
2495 3640 Pls
2510 3674 Pls
2526 3643 Pls
2542 3609 Pls
2557 3613 Pls
2573 3617 Pls
2588 3582 Pls
2604 3617 Pls
2620 3603 Pls
2635 3588 Pls
2651 3530 Pls
2667 3618 Pls
2682 3356 Pls
2698 3324 Pls
2713 3261 Pls
2729 3176 Pls
2745 3251 Pls
2760 3296 Pls
2776 3326 Pls
2791 3314 Pls
2807 3270 Pls
2823 3296 Pls
2838 3280 Pls
2854 3289 Pls
2870 3242 Pls
2885 3240 Pls
2901 3183 Pls
2916 3271 Pls
2932 3239 Pls
2948 3212 Pls
2963 3170 Pls
2979 3174 Pls
2995 3152 Pls
3010 3149 Pls
3026 3143 Pls
3041 3122 Pls
3057 3106 Pls
3073 3194 Pls
3088 3175 Pls
3104 3148 Pls
3119 3102 Pls
3135 3079 Pls
3151 3030 Pls
3166 3041 Pls
3182 3128 Pls
3198 3100 Pls
3213 3128 Pls
3229 3128 Pls
3244 3091 Pls
3260 3102 Pls
3276 3098 Pls
3291 3075 Pls
3307 3071 Pls
3323 3031 Pls
3338 2973 Pls
3354 2995 Pls
3369 2986 Pls
3385 2967 Pls
3401 2977 Pls
3416 2972 Pls
3432 2965 Pls
3448 2976 Pls
3463 2949 Pls
3479 2929 Pls
3494 3024 Pls
3510 2977 Pls
3526 2966 Pls
3541 2854 Pls
3557 2923 Pls
3572 2879 Pls
3588 2851 Pls
3604 2910 Pls
3619 2858 Pls
3635 2871 Pls
3651 2875 Pls
3666 2831 Pls
3682 2826 Pls
3697 2811 Pls
3713 2807 Pls
3729 2814 Pls
3744 2668 Pls
3760 2705 Pls
3776 2516 Pls
3791 2586 Pls
3807 2718 Pls
3822 2715 Pls
3838 2719 Pls
3854 2731 Pls
3869 2779 Pls
3885 2779 Pls
3900 2755 Pls
3916 2746 Pls
3932 2722 Pls
3947 2720 Pls
3963 2641 Pls
3979 2627 Pls
3994 2616 Pls
4010 2574 Pls
4025 2560 Pls
4041 2548 Pls
4057 2536 Pls
4072 2550 Pls
4088 2538 Pls
4104 2524 Pls
4119 2534 Pls
4135 2519 Pls
4150 2511 Pls
4166 2518 Pls
4182 2495 Pls
4197 2507 Pls
4213 2498 Pls
4229 2548 Pls
4244 2535 Pls
4260 2539 Pls
4275 2537 Pls
4291 2551 Pls
4307 2495 Pls
4322 2515 Pls
4338 2493 Pls
4353 2513 Pls
4369 2445 Pls
4385 2440 Pls
4400 2393 Pls
4416 2395 Pls
4432 2443 Pls
4447 2451 Pls
4463 2426 Pls
4478 2436 Pls
4494 2398 Pls
4510 2405 Pls
4525 2368 Pls
4541 2357 Pls
4557 2317 Pls
4572 2325 Pls
4588 2321 Pls
4603 2318 Pls
4619 2270 Pls
4635 2288 Pls
4650 2285 Pls
4666 2278 Pls
4681 2259 Pls
4697 2242 Pls
4713 2213 Pls
4728 2223 Pls
4744 2288 Pls
4760 2314 Pls
4775 2276 Pls
4791 2225 Pls
4806 2198 Pls
4822 2102 Pls
4838 2053 Pls
4853 2061 Pls
4869 2035 Pls
4885 2037 Pls
4900 2006 Pls
4916 1992 Pls
4931 1962 Pls
4947 2069 Pls
4963 2069 Pls
4978 2072 Pls
4994 2023 Pls
5010 2014 Pls
5025 2009 Pls
5041 2003 Pls
5056 1959 Pls
5072 1954 Pls
5088 1930 Pls
5103 1957 Pls
5119 1917 Pls
5134 1941 Pls
5150 1932 Pls
5166 1941 Pls
5181 1928 Pls
5197 1923 Pls
5213 1863 Pls
5228 1986 Pls
5244 1962 Pls
5259 1916 Pls
5275 1881 Pls
5291 1889 Pls
5322 1852 Pls
5338 1848 Pls
5353 1746 Pls
5369 1761 Pls
5384 1755 Pls
5400 1814 Pls
5416 1806 Pls
5431 1821 Pls
5447 1784 Pls
5462 1794 Pls
5478 1796 Pls
5494 1760 Pls
5509 1699 Pls
5525 1754 Pls
5541 1731 Pls
5556 1713 Pls
5572 1690 Pls
5587 1679 Pls
5603 1656 Pls
5619 1620 Pls
5634 1562 Pls
5650 1668 Pls
5666 1678 Pls
5681 1655 Pls
5697 1631 Pls
5712 1618 Pls
5728 1608 Pls
5744 1613 Pls
5759 1591 Pls
5775 1264 Pls
5791 1203 Pls
5806 1001 Pls
5822 894 Pls
5837 934 Pls
5853 786 Pls
5869 719 Pls
5884 798 Pls
5900 817 Pls
5915 819 Pls
5931 815 Pls
5947 806 Pls
5962 783 Pls
5978 768 Pls
5994 810 Pls
6009 812 Pls
6025 793 Pls
6040 767 Pls
6056 751 Pls
6072 745 Pls
6087 676 Pls
6103 680 Pls
6119 672 Pls
6134 650 Pls
6150 698 Pls
6165 700 Pls
6181 722 Pls
6197 699 Pls
6212 688 Pls
6228 733 Pls
6243 692 Pls
6259 663 Pls
6275 639 Pls
6290 648 Pls
6306 653 Pls
6322 629 Pls
6337 694 Pls
6353 698 Pls
6368 700 Pls
6384 681 Pls
6400 687 Pls
2509 4487 Pls
1.000 UL
LTb
714 4620 N
714 420 L
6248 0 V
0 4200 V
-6248 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
%%Pages: 1
